#!/bin/sh

#===============================================================================
#                             Default Settings
#===============================================================================

TRASH_DIR=/mnt/internal/trash
MARGIN_TOP_BOTTOM=0 # 0 - 49
MARGIN_LEFT_RIGHT=0 # 0 - 49
BORDER=bottom       # rounder | sharp | horizontal | vertical | top | bottom | left | right

#===============================================================================
# Bindings ( ⁉ has to be a single character!) [ More on fzf man page ]
#===============================================================================

#===============================================================================
#                             Filters
#===============================================================================

FILTERS="\
node_modules+;
build+;
dist+;
plugins+;
static+;
package-lock.json$;
config.js$;
config.mjs$;
.browserslistrc$;
pubspec.lock$;
composer.lock$;
.env$;
.packages$;
.idea$;
.gitignore$;
.github$;
.nvmrc$;
.dart_tool$;
.metadata$;
ios$;
android$;
yarn.lock$;
yarn-error.log$;
.git$;
.cache$;
package.json$;
tsconfig.json$;
Makefile$;
docs$;
config.mk$;
LICENSE$;
PKGBUILD$;
.cache$;
.nuxt$;
/config$;
README.md$;
data/$;
Procfile$;
jsconfig.json$;
config.json$;
nuxt.config.js$;
"
# layouts;
# nuxt.config.js;

#===============================================================================
#                             Operations
#===============================================================================

link_soft() {
  echo "$FILE_LIST" \
    | while read -r file; do
      ln -rs "$file" "$LAST_DIR"
      # cp -frs "$file" "$LAST_DIR"
    done
}
link_hard() {
  echo "$FILE_LIST" \
    | while read -r file; do
      cp -frl "$file" "$LAST_DIR"
    done
}
tmux_window() {
  tmux new-window "$EDITOR $FILE_ARGS"
  # tmux swap-window -d -t :-
}
# own() {
#   echo "$FILE_ARGS" \
#     | while read -r file; do
#       doas -n chown -R "$USER" "$file"
#     done
# }
hulk() {
  kill -37 "$FAINT_PID"
  pkill -P "$FAINT_PID"
}
push2android() { adb connect 192.168.1.100 && adb push --sync "$FILE_ARGS" $CARD; }
# push2android() { rsync -aP "$FILE_ARGS" $PHONE:$CARD; }
push2yy() { rsync -aP "$FILE_ARGS" salman@192.168.95.131:/mnt/internal; }
show_size() { notify-send "$(du -sh "$FILE_ARGS" | cut -f1)"; }
launch_choose() { /usr/local/bin/launch -c "$FILE_ARGS" & }
make_dir() { kill -38 "$FAINT_PID" && pkill -P "$FAINT_PID"; }
rename() {
  echo "$FILE_ARGS" > "$FILE_LIST_PATH"
  kill -39 "$FAINT_PID"
  pkill -P "$FAINT_PID"
}
duplicate() {
  echo "$FILE_ARGS" > "$FILE_LIST_PATH"
  kill -40 "$FAINT_PID"
  pkill -P "$FAINT_PID"
}
# compress() {
#   echo "$FILE_ARGS" \
#     | while read -r file; do
#       tar cvzf "compressed.tar" "$file"
#     done
# }
encrypt() {
  echo "$FILE_ARGS" \
    | while read -r file; do
      # gpg -esr "salmanabedin@disroot.org" "$file" && rm "$file"
      gpg -esr "$GPG_MAIL" "$file" && rm "$file"
    done
}
decrypt() {
  echo "$FILE_ARGS" \
    | while read -r file; do
      gpg -qd "$file" > "${file%.gpg}"
      rm "$file"
    done
}

# rename() {
#   ns "$FILE_ARGS"
# }

OPS="\
🏷  Rename:rename;
💕 Duplicate:duplicate;
✖  Tmux:tmux_window;
😠 Hulk:hulk;
🚮 Trash:trash;
❌ Delete:delete;
©  Yank:yank;
🖌  Paste:paste;
🚚 Move:move;
📱 Push to Android:push2android;
ℹ  Show Size:show_size;
💊 Choose:launch_choose;
📁 New Directory:make_dir;
🗞  Soft Link:link_soft;
🌴 Hard Link:link_hard;
🔒 Encrypt:encrypt;
🔑 Decrypt:decrypt;
"
# 😎 Own:own;
# ♦  Compress:compress;
# 💻 Push to YY:push2yy;

#===============================================================================
#                               Icons
#===============================================================================

ICONS="\
DIR:📁;
FILE:📃;
LINK:⛓;
iso|img:📀;
png|ico:🖼;
jpg|jpeg:📸;
part:💔;
json:📒;
md:📘;
tex:📜;
css|sass|scss:🎨;
html|pug:📐;
url:🌎;
pdf|epub:📚;
mp4|mkv:🎥;
ts|js:🎮;
"

execute() {
  /usr/local/bin/launch -f "$*"
}
