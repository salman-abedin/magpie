#!/bin/sh

[ -f ~/.config/faintrc_private ] && . ~/.config/faintrc_private

#===============================================================================
#                             Default Settings
#===============================================================================

TRASH_DIR=/mnt/internal/trash
MARGIN_TOP_BOTTOM=0 # 0 - 49
MARGIN_LEFT_RIGHT=0 # 0 - 49
BORDER=bottom       # rounder | sharp | horizontal | vertical | top | bottom | left | right

#===============================================================================
# Bindings ( ⁉ has to be a single character!) [ More on fzf man page ]
#===============================================================================

#===============================================================================
#                             Filters
#===============================================================================

FILTERS="\
.vscode;
node_modules;
env;
__;
.svelte-kit;
build;
dist;
plugins;
package-lock.json;
main.spec;
requirements.txt;
pyvenv.cfg;
config.js;
config.mjs;
example;
.browserslistrc;
pubspec.lock;
composer.lock;
.ex4;
.dat;
.env;
.packages;
.idea;
.gitignore;
.github;
.nvmrc;
.log;
.dart_tool;
.metadata;
ios;
android;
yarn.lock;
yarn-error.log;
.git;
.cache;
manifest.json;
credentials.json;
.session;
.session-journal;
package.json;
tsconfig.json;
Makefile;
docs;
config.mk;
LICENSE;
PKGBUILD;
.cache;
.nuxt;
README.md;
data;
Procfile;
jsconfig.json;
config.json;
nuxt.config.js;
"
# layouts;
# nuxt.config.js;

#===============================================================================
#                             Operations
#===============================================================================

link_soft() {
    echo "$FILE_LIST" \
        | while read -r file; do
            ln -rs "$file" "$LAST_DIR"
            # cp -frs "$file" "$LAST_DIR"
        done
}
link_hard() {
    echo "$FILE_LIST" \
        | while read -r file; do
            cp -frl "$file" "$LAST_DIR"
        done
}
tmux_window() {
    tmux new-window "$EDITOR $FILE_ARGS"
    # tmux swap-window -d -t :-
}
# own() {
#   echo "$FILE_ARGS" \
#     | while read -r file; do
#       doas -n chown -R "$USER" "$file"
#     done
# }
hulk() {
    kill -37 "$FAINT_PID"
    pkill -P "$FAINT_PID"
}
upload() { curl -F"file=@$FILE_ARGS" https://0x0.st | xsel -b; }
push_to_testmain() { rsync -aPv "$FILE_ARGS" testmain:/home/test/isis/docdef; }
push_to_arnie() { adb connect 192.168.0.100 && adb push --sync "$FILE_ARGS" $CARD; }
# push2android() { rsync -aP "$FILE_ARGS" $PHONE:$CARD; }
show_size() { notify-send "$(du -sh "$FILE_ARGS" | cut -f1)"; }
launch_choose() { /usr/local/bin/launch -c "$FILE_ARGS" & }
make_dir() { kill -38 "$FAINT_PID" && pkill -P "$FAINT_PID"; }
rename() {
    echo "$FILE_ARGS" > "$FILE_LIST_PATH"
    kill -39 "$FAINT_PID"
    pkill -P "$FAINT_PID"
}
duplicate() {
    echo "$FILE_ARGS" > "$FILE_LIST_PATH"
    kill -40 "$FAINT_PID"
    pkill -P "$FAINT_PID"
}
compress() {

    CURRENT=$PWD
    LOCATION="${FILE_ARGS%/*}"
    NAME="${FILE_ARGS##*/}"
    cd "$LOCATION" || exit
    # tar cfz compressed.tgz --exclude=./compressed.tgz .
    zip -r "$NAME".zip "$NAME"
    cd "$CURRENT" || exit
}

encrypt() {
    echo "$FILE_ARGS" \
        | while read -r file; do
            # gpg -esr "salmanabedin@disroot.org" "$file" && rm "$file"
            gpg -esr "$GPG_MAIL" "$file" && rm "$file"
        done
}
decrypt() {
    echo "$FILE_ARGS" \
        | while read -r file; do
            gpg -qd "$file" > "${file%.gpg}"
            rm "$file"
        done
}

# rename() {
#   ns "$FILE_ARGS"
# }

OPS="\
🏷  Rename:rename;
💕 Duplicate:duplicate;
✖  Tmux:tmux_window;
😠 Hulk:hulk;
🚮 Trash:trash;
❌ Delete:delete;
©  Yank:yank;
🖌  Paste:paste;
🚚 Move:move;
🖥  Push to RH2:push_to_rh2;
🖥  Push to RHS2:push_to_rhs2;
📱 Push to Arnie:push_to_arnie;
⏰ Push to Lenny:push_to_lenny;
⏰ Push to GSS:push_to_gss;
⏰ Push to Test Main:push_to_testmain;
ℹ  Show Size:show_size;
💊 Choose:launch_choose;
📁 New Directory:make_dir;
🗞  Soft Link:link_soft;
🌴 Hard Link:link_hard;
🔒 Encrypt:encrypt;
🔑 Decrypt:decrypt;
♦  Compress:compress;
⬆  Upload:upload;
🔒 InfoImage Encrypt:infoimage_encrypt;
🔑 InfoImage Decrypt:infoimage_decrypt;
📃 View Markdown:view_markdown;
"
# 😎 Own:own;
# 💻 Push to YY:push2yy;

#===============================================================================
#                               Icons
#===============================================================================

ICONS="\
pwd:🏠;
DIR:📁;
FILE:📃;
LINK:⛓;
iso|img:📀;
png|ico:🖼;
jpg|jpeg:📸;
ts|js|py:🍹;
json|yaml|yml:📜;
part:💔;
md:📘;
css|sass|scss:🎨;
html|pug:📐;
url:🌎;
pdf|epub:📚;
mp4|mkv:🎥;
"

execute() {
    # /usr/local/bin/launch -f "$*"
    $(which launch) -f "$*"
}

# ╔══════════════════════════════════════════════════════════════════════
# ║                              GraveYard
# ╚══════════════════════════════════════════════════════════════════════
